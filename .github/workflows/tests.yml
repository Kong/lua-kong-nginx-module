name: Tests

on: [push, pull_request]

jobs:
  lualint:
    name: Lint
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - uses: Jayrgo/luacheck-action@v1
      name: luacheck
      with:
        # List of files, directories and rockspecs to check.
        # Default: .
        files: 'lualib'

        # Path to configuration file.
        # Default: .luacheckrc
        config: '.luacheckrc'

        # Arguments passed to luacheck.
        # Default: -q
        args: '-q'

  tests:
    name: Tests
    runs-on: ubuntu-20.04

    env:
      JOBS: 1  # must be 1 as socket tests interfere with each other

      INSTALL_ROOT: /home/runner/work/install-root
      DOWNLOAD_ROOT: /home/runner/work/download-root

      OPENSSL_INSTALL: /home/runner/work/install-root/openssl
      OPENSSL_DIR: /home/runner/work/install-root/openssl
      OPENRESTY_INSTALL: /home/runner/work/install-root/openresty
      LUAROCKS_INSTALL: /home/runner/work/install-root/luarocks

      BUILD_TOOLS_DOWNLOAD: /home/runner/work/download-root/kong-build-tools
      BUILD_TOOLS_BRANCH: master

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Setup cache
      uses: actions/cache@v2
      id: cache-deps
      with:
        path: |
          ${{ env.INSTALL_ROOT }}
        key: ${{ runner.os }}-${{ hashFiles('**/tests.yml') }}-${{ hashFiles('**/*.c', '**/*.h') }}-${{ hashFiles('.requirements') }}-${{ hashFiles('kong-*.rockspec') }}

    - name: Install packages
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        sudo apt update
        sudo apt-get install -qq -y cpanminus net-tools libpcre3-dev build-essential valgrind

    - name: Get deps version
      run: |
          echo "OPENRESTY=`grep RESTY_VERSION .requirements | sed -e 's/.*=//' | tr -d '\n'`" >> $GITHUB_ENV
          echo "LUAROCKS=`grep RESTY_LUAROCKS_VERSION .requirements | sed -e 's/.*=//' | tr -d '\n'`" >> $GITHUB_ENV
          echo "OPENSSL=`grep RESTY_OPENSSL_VERSION .requirements | sed -e 's/.*=//' | tr -d '\n'`" >> $GITHUB_ENV

    #- name: Checkout kong-build-tools
    #  if: steps.cache-deps.outputs.cache-hit != 'true'
    #  uses: actions/checkout@v2
    #  with:
    #    repository: Kong/kong-build-tools
    #    path: ${{ env.INSTALL_ROOT }}/kong-build-tools
    #    ref: ${{ env.BUILD_TOOLS_BRANCH}}

    - name: Setup tools
      run: |
        source .github/workflows/setup_env.sh

    - name: Run Test
      run: |
        export PATH=$OPENSSL_INSTALL/bin:$OPENRESTY_INSTALL/nginx/sbin:$OPENRESTY_INSTALL/bin:$LUAROCKS_INSTALL/bin:$PATH
        export LD_LIBRARY_PATH=$OPENSSL_INSTALL/lib:$LD_LIBRARY_PATH # for openssl's CLI invoked in the test suite

        nginx -V
        resty -V
        luarocks --version
        openssl version

        eval `luarocks path`
        prove -j$JOBS -r t

